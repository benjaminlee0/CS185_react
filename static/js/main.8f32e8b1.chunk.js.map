{"version":3,"sources":["Tab.js","TabList.js","Home.js","Baking.js","Projects.js","About.js","Body.js","Navbar.js","App.js","serviceWorker.js","index.js","images/profile.jpg","images/matcha1.jpg","images/matcha2.jpg","images/coffee1.jpg","images/coffee2.jpg","images/rideshare.PNG","images/aboutpic.PNG"],"names":["Tab","addStyling","props","tabs","title","activeTab","backgroundColor","style","this","onClick","changeTab","bind","Component","TabList","map","Home","id","className","class","src","profile","alt","Baking","matcha1","matcha2","coffee1","coffee2","Projects","href","border","rideshare","width","height","About","aboutpic","Body","displayContent","Navbar","state","setState","App","Boolean","window","location","hostname","match","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error","console","message","module","exports"],"mappings":"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","file":"static/js/main.8f32e8b1.chunk.js","sourcesContent":["import React, {Component} from 'react';\r\nimport './css/Navbar.css';\r\n\r\nexport class Tab extends Component{\r\n\r\n    addStyling = () => {\r\n        if(this.props.tabs.title == this.props.activeTab){\r\n            return {backgroundColor: 'rgb(61, 61, 151)'}\r\n        }else{\r\n            return {backgroundColor: ''}\r\n        }\r\n    }\r\n\r\n    render(){\r\n        return (\r\n            <li><button style={this.addStyling()} onClick={this.props.changeTab.bind(this, this.props.tabs.title)}>{this.props.tabs.title}</button></li>\r\n        )   \r\n    }\r\n}\r\nexport default Tab;","import React, {Component} from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './css/Navbar.css';\r\nimport Tab from './Tab'\r\n\r\nexport class TabList extends Component{\r\n\r\n    render(){\r\n        return this.props.tabs.map((tabs) =>(\r\n                <Tab tabs={tabs}\r\n                changeTab={this.props.changeTab}\r\n                activeTab={this.props.activeTab}/>\r\n        ))\r\n        //     <div>\r\n        //         <div className=\"Nav\">\r\n        //             <ul className = \"NavList\">\r\n        //                 <li><button onClick={this.handleChange(\"home\")}>Home</button></li>\r\n        //                 <li><button onClick={this.handleChange(\"projects\")}>Projects</button></li>\r\n        //                 <li><button onClick={this.handleChange(\"baking\")}>Baking</button></li>\r\n        //                 <li><button onClick={this.handleChange(\"about\")}>About</button></li>\r\n        //             </ul>\r\n        //         </div>\r\n\r\n        //         <div id=\"BodyDiv\" className=\"BodyDiv\">\r\n\r\n        //         </div>\r\n        // </div>\r\n    }\r\n}\r\nexport default TabList;","import React, {Component} from 'react';\r\nimport profile from './images/profile.jpg';\r\nimport './css/Home.css';\r\nimport {SRLWrapper} from \"simple-react-lightbox\";\r\n\r\nexport class Home extends Component{\r\n  render(){\r\n    return (\r\n      <div>\r\n          <div id = \"lightbox\"></div>\r\n\r\n          <div className=\"DivHeader\">\r\n              <h1>Benjamin Lee</h1>\r\n          </div>\r\n\r\n        <div class=\"DivProfilePic\">\r\n            <SRLWrapper>\r\n            <div>\r\n                <img className=\"Profile\" src={profile} alt=\"Benjamin Lee\"></img>\r\n            </div>\r\n            </SRLWrapper>\r\n            <div>\r\n                <p><br></br>\r\n                    Hello! My name is Benjamin Lee and I am currently in my second year at UC Santa Barbara with senior class standing.\r\n                    I am a candidate for a B.S. in Computer Science and expect to graduate by June 2021.\r\n                </p>\r\n            </div>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\nexport default Home;","import React, {Component} from 'react';\r\nimport matcha1 from './images/matcha1.jpg';\r\nimport matcha2 from './images/matcha2.jpg';\r\nimport coffee1 from './images/coffee1.jpg';\r\nimport coffee2 from './images/coffee2.jpg';\r\nimport './css/Baking.css';\r\nimport {SRLWrapper} from \"simple-react-lightbox\";\r\n\r\nexport class Baking extends Component{\r\n  render(){\r\n    return (\r\n      <SRLWrapper>\r\n        <div className=\"Baking\">\r\n\r\n            <div className=\"Matcha\">\r\n\r\n                <div className=\"Matcha1\">\r\n                    <img className=\"Matcha1Img\" src={matcha1}></img>\r\n                    <img className=\"Matcha2Img\" src={matcha2}></img>\r\n                </div>\r\n\r\n                <div className=\"MatchaText\">\r\n\r\n                    <p>\r\n                        This is a cake I made for my friend's birthday. It was my first time baking a full size cake like this! My goal was to\r\n                        incorporate flavors she would like in a cake format that I personally enjoyed; that is, a lighter cake with filling and frosting\r\n                        that stays away from the iced, powdered sugar cakes that are prevalent. <br></br><br></br>The cake portion is purely matcha flavored. While the dark\r\n                        coloration of the crumb resembles that of a chocolate cake, it is in fact purely matcha that has taken on a darker color due to the baking\r\n                        process! In between each of the three cake layers is a layer of matcha mousse. Finding a way to sandwich that mousse in between the layers\r\n                        proved to be an interesting challenge. I had to devise a makeshift \"mold\" to pour the unset mousse into out of parchment paper that I wrapped\r\n                        around the cake. <br></br><br></br> Finally, the cake is frosted with a layer of plain whipped cream. I had contemplated flavoring the whipped cream or even\r\n                        simply covering the cake in another mousse layer, but I decided on the whipped cream in order to create a more visually appealing color contrast, a concept\r\n                        I developed further by adding blueberries to and dusting matcha powder to the top of the cake.\r\n                    </p>\r\n\r\n                </div>\r\n\r\n            </div>\r\n\r\n            <div className=\"Coffee\">\r\n\r\n                <div className=\"CoffeeImgs\">\r\n                    <img className=\"Coffee1Img\" src={coffee1}></img>\r\n                    <img className=\"Coffee2Img\" src={coffee2}></img>\r\n                </div>\r\n\r\n                <div className=\"CoffeeText\">\r\n\r\n                    <p>\r\n                        I recently made this cake for Easter! It is a \"coffee crunch\" cake, inspired by the many cake variations of the\r\n                        same name offered in bakeries around the Bay Area. These cakes are defined by a coffee-flavored cake base, topped with\r\n                        \"coffee crunch\" candy that is also dispersed between the layers. The coffee crunch candy is simply a variation of the foam\r\n                        toffee candy that goes by names such as \"seafoam\" or \"honeycomb\".<br></br><br></br>\r\n                        The recipes I found online for coffee crunch cakes used a chiffon cake base for the cake layers, which I wasn't particularly\r\n                        fond of. Rather, I elected to use the same base cake recipe that I used for my matcha cake, with the obvious substitution of coffee\r\n                        flavor for matcha. I accomplished this by adding a bit of strong brewed coffee to the cake batter, a step which mirrored my matcha cake\r\n                        recipe's addition of brewed green tea. I also added a bit of cocoa powder in the hopes that this would make the resulting coffee flavor a bit\r\n                        richer and deeper. The frosting of the cake is a simple italian buttercream, flavored with some more brewed coffee. <br></br><br></br>\r\n                        I was overall pleased with the result, however in the future I would like even more coffee flavor. I tasted the cake batter before I baked it and\r\n                        it was wonderfully dark and rich with coffee flavor; however, after baking, it seems some of this flavor was lost or perhaps blended with the chocolate\r\n                        flavoring also present, a reverse outcome from my experience with the matcha cake in which the toasting seemed to enhance the flavor of the matcha. In the future,\r\n                        I will probably lessen the amount of cocoa powder added, and greatly increase the strength of the coffee I use in the cake batter in order to achieve that rich coffee\r\n                        flavor in the finished cake.\r\n                    </p>\r\n\r\n                </div>\r\n\r\n\r\n            </div>\r\n\r\n        </div>\r\n        </SRLWrapper>\r\n    );\r\n  }\r\n}\r\nexport default Baking;","import React, {Component} from 'react';\r\nimport rideshare from './images/rideshare.PNG';\r\nimport './css/Projects.css';\r\n\r\nexport class Projects extends Component{\r\n  render(){\r\n    return (\r\n      <div>\r\n        <div className=\"Projects\">\r\n\r\n            <div className =\"RideshareDiv\">\r\n\r\n                <div className=\"RideshareImage\">\r\n                    <a href=\"https://rideshare-139f7.firebaseapp.com/\">\r\n                    <img border=\"0\" alt=\"Rideshare Application\" src={rideshare} width=\"450\" height=\"250\"></img>\r\n                    </a>\r\n                </div>\r\n\r\n                <div className=\"RideshareText\">\r\n                    <p>\r\n                        <b>Rideshare Application</b> <br></br><br></br>\r\n                        I along with a team of five other students designed a web application for the purpose of helping drivers and passengers coordinate\r\n                        long-distance rideshare-style trips.<br></br><br></br> The application allows drivers the opportunity to post their rides to a consolidated database of\r\n                        rides, which are displayed on a map. Drivers include information such as their planned departure time and destination, as well as any additional\r\n                        details such as how much they are planning to charge. <br></br><br></br> Users searching for rides are able to access a map view of posted rides leaving from\r\n                        their current location, and are provided filtering tools that allow them to find rides that most suit their needs.\r\n                    </p>\r\n                </div>\r\n                \r\n\r\n            </div>\r\n\r\n\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\nexport default Projects;","import React, {Component} from 'react';\r\nimport aboutpic from './images/aboutpic.PNG';\r\nimport './css/About.css';\r\n\r\nexport class About extends Component{\r\n  render(){\r\n    return (\r\n      <div className=\"MainDiv\">\r\n\r\n      <div className=\"LinkDiv\">\r\n\r\n          <div className=\"Thanks\">\r\n              <p>\r\n                  <br></br><br></br><br></br>\r\n                  Thank you for visiting my website! <br></br> Here are some links to get to know me better.\r\n\r\n              </p>\r\n          </div>\r\n\r\n          <div className=\"Links\">\r\n              <a href=\"https://github.com/benjaminlee0\">Github</a> <br></br><br></br>\r\n              <a href=\"https://www.linkedin.com/in/benjamin-lee-85595a145/\">LinkedIn</a><br></br><br></br>\r\n              <a href=\"https://www.facebook.com/profile.php?id=100012241235191\">Facebook</a><br></br><br></br>\r\n              <br></br><br></br><br></br><br></br>\r\n          </div>\r\n\r\n          <div className=\"Song\">\r\n              <p>\r\n                  My favorite song:\r\n              </p>\r\n              <iframe width=\"420\" height=\"315\"\r\n              src=\"https://www.youtube.com/embed/Dw1ZC6sZjIY\">\r\n              </iframe>\r\n          </div>\r\n\r\n      </div>\r\n\r\n\r\n      <div className=\"ImageDiv\">\r\n\r\n          <img className=\"Pic\" src={aboutpic}></img>\r\n\r\n      </div>\r\n\r\n\r\n  </div>\r\n\r\n    );\r\n  }\r\n}\r\nexport default About;","import React, {Component} from 'react';\r\nimport Home from './Home'\r\nimport Baking from './Baking'\r\nimport Projects from './Projects'\r\nimport About from './About'\r\n\r\nexport class Body extends Component{\r\n\r\n    displayContent = () =>{\r\n        var activeTab = this.props.activeTab\r\n        if(activeTab == \"Home\"){\r\n            return <Home/>;\r\n        }else if(activeTab == \"Projects\"){\r\n            return <Projects/>;\r\n        }else if(activeTab == \"Baking\"){\r\n            return <Baking/>;\r\n        }else{\r\n            return <About/>;\r\n        }\r\n    }\r\n\r\n    render(){\r\n        return (this.displayContent());\r\n    }\r\n}\r\nexport default Body;","import React, {Component} from 'react';\r\nimport './css/Navbar.css';\r\nimport TabList from './TabList';\r\nimport Body from './Body';\r\nimport {TinyButton as ScrollUpButton} from \"react-scroll-up-button\";\r\n\r\nexport class Navbar extends Component{\r\n    constructor(){\r\n        super();\r\n        this.state = {\r\n          activeTab: \"Home\"\r\n        }\r\n\r\n        this.changeTab = (title) => {\r\n            this.setState({\r\n                activeTab: title\r\n            })\r\n        }\r\n      }\r\n\r\n    render(){\r\n        const tabs = [\r\n            {\r\n              title: 'Home'\r\n            },\r\n            {\r\n              title: 'Projects'\r\n            },\r\n            {\r\n              title: 'Baking'\r\n            },\r\n            {\r\n              title: 'About'\r\n            }\r\n          ]\r\n        return(\r\n            <div>\r\n            <ul className = \"NavList\">\r\n                <TabList tabs={tabs}\r\n                changeTab={this.changeTab}\r\n                activeTab={this.state.activeTab}/>\r\n                </ul>\r\n                <Body activeTab={this.state.activeTab}/>\r\n                <ScrollUpButton/>\r\n            </div>\r\n        )\r\n    }\r\n}\r\nexport default Navbar;","import React, {Component} from 'react';\r\nimport Navbar from './Navbar';\r\nimport SimpleReactLightbox from \"simple-react-lightbox\";\r\n\r\nexport class App extends Component{\r\n\r\n\r\n\r\n  render(){\r\n    return (\r\n      <div>\r\n        <SimpleReactLightbox>\r\n        <Navbar/>\r\n        </SimpleReactLightbox>\r\n      </div>\r\n\r\n\r\n    );\r\n  }\r\n}\r\nexport default App;","// This optional code is used to register a service worker.\r\n// register() is not called by default.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on subsequent visits to a page, after all the\r\n// existing tabs open on the page have been closed, since previously cached\r\n// resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model and instructions on how to\r\n// opt-in, read https://bit.ly/CRA-PWA\r\n\r\nconst isLocalhost = Boolean(\r\n  window.location.hostname === 'localhost' ||\r\n    // [::1] is the IPv6 localhost address.\r\n    window.location.hostname === '[::1]' ||\r\n    // 127.0.0.0/8 are considered localhost for IPv4.\r\n    window.location.hostname.match(\r\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\r\n    )\r\n);\r\n\r\nexport function register(config) {\r\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n    // The URL constructor is available in all browsers that support SW.\r\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\r\n    if (publicUrl.origin !== window.location.origin) {\r\n      // Our service worker won't work if PUBLIC_URL is on a different origin\r\n      // from what our page is served on. This might happen if a CDN is used to\r\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\r\n      return;\r\n    }\r\n\r\n    window.addEventListener('load', () => {\r\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n\r\n      if (isLocalhost) {\r\n        // This is running on localhost. Let's check if a service worker still exists or not.\r\n        checkValidServiceWorker(swUrl, config);\r\n\r\n        // Add some additional logging to localhost, pointing developers to the\r\n        // service worker/PWA documentation.\r\n        navigator.serviceWorker.ready.then(() => {\r\n          console.log(\r\n            'This web app is being served cache-first by a service ' +\r\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\r\n          );\r\n        });\r\n      } else {\r\n        // Is not localhost. Just register service worker\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nfunction registerValidSW(swUrl, config) {\r\n  navigator.serviceWorker\r\n    .register(swUrl)\r\n    .then(registration => {\r\n      registration.onupdatefound = () => {\r\n        const installingWorker = registration.installing;\r\n        if (installingWorker == null) {\r\n          return;\r\n        }\r\n        installingWorker.onstatechange = () => {\r\n          if (installingWorker.state === 'installed') {\r\n            if (navigator.serviceWorker.controller) {\r\n              // At this point, the updated precached content has been fetched,\r\n              // but the previous service worker will still serve the older\r\n              // content until all client tabs are closed.\r\n              console.log(\r\n                'New content is available and will be used when all ' +\r\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\r\n              );\r\n\r\n              // Execute callback\r\n              if (config && config.onUpdate) {\r\n                config.onUpdate(registration);\r\n              }\r\n            } else {\r\n              // At this point, everything has been precached.\r\n              // It's the perfect time to display a\r\n              // \"Content is cached for offline use.\" message.\r\n              console.log('Content is cached for offline use.');\r\n\r\n              // Execute callback\r\n              if (config && config.onSuccess) {\r\n                config.onSuccess(registration);\r\n              }\r\n            }\r\n          }\r\n        };\r\n      };\r\n    })\r\n    .catch(error => {\r\n      console.error('Error during service worker registration:', error);\r\n    });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl, config) {\r\n  // Check if the service worker can be found. If it can't reload the page.\r\n  fetch(swUrl, {\r\n    headers: { 'Service-Worker': 'script' },\r\n  })\r\n    .then(response => {\r\n      // Ensure service worker exists, and that we really are getting a JS file.\r\n      const contentType = response.headers.get('content-type');\r\n      if (\r\n        response.status === 404 ||\r\n        (contentType != null && contentType.indexOf('javascript') === -1)\r\n      ) {\r\n        // No service worker found. Probably a different app. Reload the page.\r\n        navigator.serviceWorker.ready.then(registration => {\r\n          registration.unregister().then(() => {\r\n            window.location.reload();\r\n          });\r\n        });\r\n      } else {\r\n        // Service worker found. Proceed as normal.\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    })\r\n    .catch(() => {\r\n      console.log(\r\n        'No internet connection found. App is running in offline mode.'\r\n      );\r\n    });\r\n}\r\n\r\nexport function unregister() {\r\n  if ('serviceWorker' in navigator) {\r\n    navigator.serviceWorker.ready\r\n      .then(registration => {\r\n        registration.unregister();\r\n      })\r\n      .catch(error => {\r\n        console.error(error.message);\r\n      });\r\n  }\r\n}\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './css/index.css';\r\nimport App from './App';\r\nimport * as serviceWorker from './serviceWorker';\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <App />\r\n  </React.StrictMode>,\r\n  document.getElementById('root')\r\n);\r\n\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: https://bit.ly/CRA-PWA\r\nserviceWorker.unregister();\r\n","module.exports = __webpack_public_path__ + \"static/media/profile.d1dfe1e8.jpg\";","module.exports = __webpack_public_path__ + \"static/media/matcha1.5b411a50.jpg\";","module.exports = __webpack_public_path__ + \"static/media/matcha2.dce15c42.jpg\";","module.exports = __webpack_public_path__ + \"static/media/coffee1.d693e4a5.jpg\";","module.exports = __webpack_public_path__ + \"static/media/coffee2.1160c803.jpg\";","module.exports = __webpack_public_path__ + \"static/media/rideshare.d7c05b05.PNG\";","module.exports = __webpack_public_path__ + \"static/media/aboutpic.123016ff.PNG\";"],"sourceRoot":""}